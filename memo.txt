# Docker Rails6 環境構築
https://qiita.com/nsy_13/items/9fbc929f173984c30b5d

# Docker Rails7 環境構築
https://nothing-behind.com/2021/12/21/docker-compose%E3%81%A7ruby3rails7-mysql%E3%81%AE%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%82%92%E8%A1%8C%E3%81%86%E6%96%B9%E6%B3%95%E3%81%BE%E3%81%A8%E3%82%81/

コンテナに入る
$ docker-compose exec web bash

# heroku 直近のイベント確認
$ heroku logs

# コントローラ生成
$ rails g controller クラス名 メソッド名
 - controllersに クラス,メソッド,
 - viewsにerb
 - routes.rbにルーティングが追加される

# テスト実行
$ rails test

# Rspec
インストール
Gemfile
  group :development, :test do
    # RSpec
    gem 'rspec-rails', '~> 5.0.2'
    gem 'spring-commands-rspec'
  end
$ bundle install
$ rails g rspec:install

実行
$ rspec

# herokuデプロイ
メンテナンスモード オン
$ heroku maintenance:on
デプロイ
$ git push heroku
DBリセット
$ heroku run rails db:migrate:reset RAILS_ENV=production DISABLE_DATABASE_ENVIRONMENT_CHECK=1
マイグレート
$ heroku run rails db:migrate
サンプルデータ
$ heroku run rails db:seed
メンテナンスモード オフ
$ heroku maintenance:off

```
heroku maintenance:on
git push heroku
heroku run rails db:migrate:reset RAILS_ENV=production DISABLE_DATABASE_ENVIRONMENT_CHECK=1
heroku run rails db:migrate
heroku run rails db:seed
heroku maintenance:off
```

# mysqlコンテナ操作
$ docker-compose exec db bash
// mysql接続
mysql -u root -p
パスワード入力(password)
// タイムゾーン確認
mysql> show variables like '%time_zone%';
// データベース一覧表示
mysql> show databases;
// データベース選択
use myapp_development
// テーブル一覧表示
mysql> show tables;
// sql
mysql> desc users;
mysql> select * from users;


# postgresコンテナ操作
$ docker-compose exec postgres bash
// postgres接続
psql -d myapp_development -U postgres
// データベース一覧表示
postgres=# \l
// テーブル一覧表示
postgres=# \z
// テーブル定義確認
postgres=# \d tablename
// sql
postgres=# select * from users;

# validation error時にエラーが表示されない
https://zenn.dev/satococoa/articles/95122320f1ca87

render :new, status: :unprocessable_entity # <= status を追加

# DB
rails db:create
rails db:migrate
rails db:migrate:reset


# Heroku MySQL設定方法
Herokuへのデプロイ方法【Heroku+Rails+MySQL】
https://qiita.com/murakami-mm/items/9587e21fc0ed57c803d0



# Ruby On Rails 7 - Delete method not working
https://stackoverflow.com/questions/70446101/ruby-on-rails-7-delete-method-not-working

before
<%= link_to "ログアウト", logout_path, method: :delete %>
after
<%= link_to "ログアウト", logout_path, data: { "turbo-method": :delete } %>


# main以外のブランチを一括削除
$ git branch | grep -Ev "master|main" | xargs git branch -D


# Heroku MySQlエラー
Mysql2::Error: 'max_questions' resource (current value: 3600)

【Rails6, heroku】MySQLにしてmigrateしたけど有料化が必要だった件
https://qiita.com/pharma_tech3/items/505b36e9bd3fc45afe65

ClearDBのクエリ数上限に達したのがエラーの原因
herokuを無料で使う分にはPostgreSQLを使おうと思う

# api hello
rails g controller api::v1::hello

# heroku.yml
heroku.ymlからDockerビルドが可能になった
https://qiita.com/nkumag/items/7d026c73a89c9907065a

heroku環境用のdocker-comopse.ymlのようなもの

https://blog.cloud-acct.com/posts/u-setup-herokuyml-deploy/
HerokuCLI-manifestのデプロイ解説編。

# rails master.key 作成
$ EDITOR="vi" rails credentials:edit

# heroku nuxt.js エラー
Node.js（17.1.0）で“Error: error:0308010C:digital envelope routines::unsupported”が発生した時の対処方法
https://aventures.io/posts/85

Next.jsでError: error:0308010C:digital envelope routines::unsupportedを直す方法
https://off.tokyo/blog/next-0308010cdigital-envelope/


# heroku 環境変数
$ heroku config
$ heroku config:set KEY=VAL
$ heroku config:unset KEY

# debugger
Rails アプリケーションのデバッグ
https://railsguides.jp/debugging_rails_applications.html

# rails jwt
jwt発行
rails c
token = UserAuth::AuthToken.new.token
token
https://jwt.io/
```
HEADER:
{
  "alg": "HS256",
  "typ": "JWT"
}
PAYLOAD:
{
  "sub": "1234567890",
  "name": "John Doe",
  "iat": 1516239022
}
```
クレーム追加
token = UserAuth::AuthToken.new(payload: {sub: 1}).token
デコード
UserAuth::AuthToken.new(token: token)