# Docker Rails6 環境構築
https://qiita.com/nsy_13/items/9fbc929f173984c30b5d

# Docker Rails7 環境構築
https://nothing-behind.com/2021/12/21/docker-compose%E3%81%A7ruby3rails7-mysql%E3%81%AE%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89%E3%82%92%E8%A1%8C%E3%81%86%E6%96%B9%E6%B3%95%E3%81%BE%E3%81%A8%E3%82%81/

コンテナに入る
$ docker-compose exec web bash

# heroku 直近のイベント確認
$ heroku logs

# コントローラ生成
$ rails g controller クラス名 メソッド名
 - controllersに クラス,メソッド,
 - viewsにerb
 - routes.rbにルーティングが追加される

# テスト実行
$ rails test

# Rspec
インストール
Gemfile
  group :development, :test do
    # RSpec
    gem 'rspec-rails', '~> 5.0.2'
    gem 'spring-commands-rspec'
  end
$ bundle install
$ rails g rspec:install

実行
$ rspec

# herokuデプロイ
メンテナンスモード オン
$ heroku maintenance:on
デプロイ
$ git push heroku
マイグレート
$ heroku run rails db:migrate
メンテナンスモード オフ
$ heroku maintenance:off

# mysqlコンテナ操作
$ docker-compose exec db bash
// mysql接続
mysql -u root -p
パスワード入力(password)
// タイムゾーン確認
mysql> show variables like '%time_zone%';
// データベース一覧表示
mysql> show databases;
// データベース選択
use myapp_development
// テーブル一覧表示
mysql> show tables;
// sql
mysql> desc users;
mysql> select * from users;


# validation error時にエラーが表示されない
https://zenn.dev/satococoa/articles/95122320f1ca87

render :new, status: :unprocessable_entity # <= status を追加

# DB
rails db:create
rails db:migrate
rails db:migrate:reset


# Heroku MySQL設定方法
Herokuへのデプロイ方法【Heroku+Rails+MySQL】
https://qiita.com/murakami-mm/items/9587e21fc0ed57c803d0



# Ruby On Rails 7 - Delete method not working
https://stackoverflow.com/questions/70446101/ruby-on-rails-7-delete-method-not-working

before
<%= link_to "ログアウト", logout_path, method: :delete %>
after
<%= link_to "ログアウト", logout_path, data: { "turbo-method": :delete } %>
